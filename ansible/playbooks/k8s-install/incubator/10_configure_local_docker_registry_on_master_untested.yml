---
- hosts: kubernetes-masters
  become: true
  tasks:
    - debug: var=ansible_all_ipv4_addresses
    - debug: var=ansible_default_ipv4.address

    - name: Verify Ansible version.
      assert:
        that: "ansible_version.full | version_compare('2.3', '<')"
        msg: >
          "To use the playbook on Ansible >= 2.3, you must change the 'lineinfile' property 'dest' to path "

    - name: Ensure that docker daemon is running
      service:
        name: docker.service
        state: started

    - name: Create local registry storage folder /var/lib/local-registry
      file: path=/var/lib/local-registry state=directory
      register: reg
    - debug: var=reg.stdout_lines

    - name: Remove previos instance of the stateless local-registry instance, if present
      docker_container:
        name: local-registry
        state: absent

#    - name: Create auth folder
#      file: path=/var/lib/local-registry-credentials/auth state=directory
#      register: reg
#    - debug: var=reg.stdout_lines
#
#    - name: Create docker registry credentials
#      shell: docker run --entrypoint htpasswd registry:2 -Bbn myuser mypassword > /var/lib/local-registry-credentials/auth/htpasswd

    - name: Deploying a docker registry server
      command: "docker create -p 5000:5000 -v /var/lib/local-registry:/var/lib/registry -v /var/lib/local-registry-credentials/auth:/auth -e 'REGISTRY_AUTH=htpasswd'  -e 'REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm'  -e 'REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd'  -e REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io --name=local-registry registry:2"
      #command: "docker create -p 5000:5000 -v /var/lib/local-registry:/var/lib/registry -e REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io --name=local-registry registry:2 --insecure-registry "
      # to remove use:  sudo docker stop local-registry && sudo docker rm -v local-registry
      register: docker
    - debug: var=docker.stdout_lines



#    - name: Change SELinux security context
#      command: "chcon -Rvt svirt_sandbox_file_t /var/lib/local-registry"
#      register: selinux
#    - debug: var=selinux.stdout_lines

    - name: Register the local docker registry as a service
      copy:
        src: "{{ playbook_dir }}/resource/local-registry.service"
        dest: /etc/systemd/system/local-registry.service
        owner: root
        group: root
        #mode: 0644

    - name: Reaload systemd configuration
      systemd:
        name: local-registry
        enabled: yes
        state: reloaded

    # wait 300 seconds for port 5000 of any IP to close active connections, don't start checking for 10 seconds
    - wait_for:
        host: "{{ master_ip }}"
        port: 5000
        delay: 2

    - name: Test Docker Registry
      uri:
        url: http://{{ master_ip }}:5000/v2/
        status_code: 200
        user: myuser
        password: mypassword
        force_basic_auth: yes
        return_content: yes
      register: json_response

    - name: Fail if {} is not part of the request body content
      fail:
      when: "'{}' not in json_response.content"

    - name: Ensure that the 'new' local-registry daemon is running
      service:
        name: local-registry
        state: started

- hosts: all
  become: true
  tasks:
    - name: Configuring Docker to use the cluster registry cache
      lineinfile:
        dest: "/etc/sysconfig/docker"
        regexp: '^OPTIONS='
        line: "OPTIONS='--registry-mirror=http://{{ master_ip }}:5000 --log-driver=journald'"

    - name: Reload docker
      systemd:
        name: docker
        enabled: yes
        state: restarted
        daemon_reload: yes

    - name: test Docker Registry
      uri:
        url: http://{{ master_ip }}:5000/v2/
        status_code: 200
        return_content: yes
      register: test_docker_registry
      until: test_docker_registry.content == '{}'
      retries: 5
      delay: 2
      ignore_errors: yes




