---
- hosts: kubernetes-masters
  become: true
#  strategy: debug
  gather_facts: yes
  # TODO make this file idempotent
  tasks:
    - name: Show username running the deploy
      local_action: command whoami
      register: username_on_the_host
    - debug: var=username_on_the_host

    - name: Create easy-rsa tmp folder
      file:
        path: /tmp/ansible/
        state: absent

    - name: Create easy-rsa tmp folder
      file:
        path: /tmp/ansible/
        state: directory

    - name: Download and extract easy-rsa
    # https://kubernetes.io/docs/admin/authentication/#easyrsa
      unarchive:
        src: https://storage.googleapis.com/kubernetes-release/easy-rsa/easy-rsa.tar.gz
        dest: /tmp/ansible/
        remote_src: true

    - name: Init easy-rsa
      command: './easyrsa init-pki'
      args:
        chdir: /tmp/ansible/easy-rsa-master/easyrsa3

    - name: Generate cert 1
      command: './easyrsa --batch "--req-cn=`hostname`@`date +%s`" build-ca nopass'
      args:
        chdir: /tmp/ansible/easy-rsa-master/easyrsa3

    - name: Generate cert 2
      command: './easyrsa --subject-alt-name="IP:{{ master_ip }}" build-server-full server nopass'
      args:
        chdir: /tmp/ansible/easy-rsa-master/easyrsa3

    - name: Create Kubernetes ./cert folder
      file:
        path: /etc/kubernetes/certs
        state: directory

    - name: Copy ca.crt to K8s cert folder
      copy:
        remote_src: true #copy from the target machine
        src: /tmp/ansible/easy-rsa-master/easyrsa3/pki/ca.crt
        dest: /etc/kubernetes/certs/ca.crt

    - name: Copy issued/apiserver.crt to K8s cert folder
      copy:
        remote_src: true #copy from the target machine
        src: /tmp/ansible/easy-rsa-master/easyrsa3/pki/issued/server.crt
        dest: /etc/kubernetes/certs/apiserver.crt

    - name: Copy private/apiserver.key to K8s cert folder
      copy:
        remote_src: true #copy from the target machine
        src: /tmp/ansible/easy-rsa-master/easyrsa3/pki/private/server.key
        dest: /etc/kubernetes/certs/apiserver.key

    - name: Change owner of the cert folder and files
      file:
        path: /etc/kubernetes/certs
        state: directory
        owner: kube
        group: kube

    - stat:
        path: /etc/kubernetes/certs/ca.crt
      register: f
    - debug:
        msg: "Path exists and is a file"
      when: f.stat.isfile is defined and p.stat.isfile

    - stat:
        path: /etc/kubernetes/certs/apiserver.crt
      register: f
    - debug:
        msg: "Path exists and is a file"
      when: f.stat.isfile is defined and p.stat.isfile

    - stat:
        path: /etc/kubernetes/certs/apiserver.key
      register: f
    - debug:
        msg: "Path exists and is a file"
      when: f.stat.isfile is defined and p.stat.isfile









