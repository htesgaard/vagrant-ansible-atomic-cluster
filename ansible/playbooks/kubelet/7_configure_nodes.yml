---
- hosts: kubernetes-kubelets
  become: true
  become_user: root
  tasks:
    - debug: var=ansible_all_ipv4_addresses
    - debug: var=ansible_default_ipv4.address
    - debug: var=ansible_enp0s8.ipv4.address

    - name: Verify Ansible version.
      assert:
        that: "ansible_version.full | version_compare('2.3', '<')"
        msg: >
          "To use the playbook on Ansible >= 2.3, you must change the 'lineinfile' property 'dest' to path "

    - name: Copy /usr/lib/systemd/system/flanneld.service to /etc/systemd/system/flanneld.service
      copy:
        remote_src: true #copy from the target machine
        src: /usr/lib/systemd/system/flanneld.service
        dest: /etc/systemd/system/flanneld.service

    - name: Configure kubelet address
      lineinfile:
        dest: "/etc/systemd/system/flanneld.service"
        regexp: '^ExecStart='
        line: "ExecStart=/usr/bin/flanneld -etcd-endpoints=http://192.168.56.10:2379 -etcd-prefix=/atomic.io/network --iface={{ ansible_enp0s8.ipv4.address }}"

    - name: Configure kubelet address
      lineinfile:
        dest: "/etc/kubernetes/kubelet"
        regexp: '^KUBELET_ADDRESS='
        line: 'KUBELET_ADDRESS="--address={{ ansible_enp0s8.ipv4.address }}"'

    - name: Configure kubelet address
      lineinfile:
        dest: "/etc/kubernetes/kubelet"
        regexp: '^KUBELET_HOSTNAME='
        line: 'KUBELET_HOSTNAME="--hostname_override={{ ansible_enp0s8.ipv4.address }}"'

    # TODO fix hardcoded ip
    - name: Configure location of the api-server
      lineinfile:
        dest: "/etc/kubernetes/kubelet"
        regexp: '^KUBELET_API_SERVER='
        line: 'KUBELET_API_SERVER="--api_servers=http://192.168.56.10:8080"'

    # TODO fix hardcoded ip
    - name: Configure location of the etcd server
      lineinfile:
        dest: "/etc/kubernetes/config"
        regexp: '^KUBE_MASTER='
        line: 'KUBE_MASTER="--master=http://192.168.56.10:8080"'

    - name: Reaload systemd configuration
      command: "systemctl daemon-reload"
      register: systemctl

    - name: Enable restart flanneld
      command: "systemctl restart flanneld"
      register: systemctl

    - name: Enable services kubelet kube-proxy
      command: "systemctl enable kubelet kube-proxy"
      register: systemctl


#    - name: Enable and start flanneld
#      systemd:
#        name: flanneld
#        enabled: yes
#        state: started
#
#    - name: Enable and start kubelet
#      systemd:
#        name: kubelet
#        enabled: yes
#        state: started
#
#    - name: Enable and start kube-proxy
#      systemd:
#        name: kube-proxy
#        enabled: yes
#        state: started

    - name: Restart server
      shell: sleep 2 && systemctl reboot
      async: 1
      poll: 0
      ignore_errors: true

    - name: waiting for server to come back after reboot
      local_action: wait_for host={{ ansible_ssh_host }} state=started port=22 delay=30 timeout=300 connect_timeout=15

